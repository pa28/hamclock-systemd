#!/bin/bash

# read_char var
read_char() {
  stty -icanon -echo
  eval "$1=\$(dd bs=1 count=1 2>/dev/null)"
  stty icanon echo
}

BUILD_DIR="cmake-build-release"
CODENAME=$(lsb_release -sc)
ARCH=$(dpkg --print-architecture)
#
char=' '
while true
do
  echo -n "Build hamclock for ${CODENAME} ${ARCH} (Y/n)? "
  read_char char
  [[ $char == 'N' || $char == 'n' ]] && echo && exit 0
  [[ $char == 'Y' || $char == 'y' || $char == "" ]] && break
done
echo "Building..."
#
cd SourceCode && ./build && cd .. || exit 1
#
rm -rf ${BUILD_DIR} || exit 1
mkdir ${BUILD_DIR} || exit 1
cd ${BUILD_DIR} || exit 1
cmake -DCMAKE_BUILD_TYPE=Release .. || exit 1
make package || exit 1
type vfrott_upload_auth >/dev/null 2>/dev/null && vfrott_upload_auth || exit 0
#
char=' '
while true
do
  echo -n "Upload packages for ${CODENAME} ${ARCH} (y/N)? "
  read_char char
  [[ $char == 'N' || $char == 'n' || $char == "" ]] && echo && exit 0
  [[ $char == 'Y' || $char == 'y' ]] && break
done
echo "Uploading..."
#
case $CODENAME in
    buster)
    bullseye)
    bookworm)
        echo $CODENAME
        ../bin/vfrott -n -c $CODENAME -s stable hamclock*.deb
        ;;
    nobel)
        echo $CODENAME
	../bin/vfrott -n -s stable hamclock*.deb
	;;
    *)
	echo "No package upload for ${CODENAME}."
esac
